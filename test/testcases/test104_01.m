
% Convolution layer testcase

% Features:
%  - Convolution layer for CNN
%  - Note that the size of kernel_mem should be KERNEL_NO * KERNEL_SIZE.
%    Also IMAGE_SIZE should be divisable by SQ_MEM_BLOCK_SIZE.

KERNEL_NO = 10; % Number of kernels
N = 32; % Image Dimension
IMAGE_SIZE = N*N; % Image size
MEM_BLOCK_SIZE = 16; % Number of words in a memory block
KERNEL_SIZE = MEM_BLOCK_SIZE; % Size of the kernel
SQ_MEM_BLOCK_SIZE = MEM_BLOCK_SIZE * MEM_BLOCK_SIZE;
OUTPUT_SIZE = IMAGE_SIZE / MEM_BLOCK_SIZE; % The size of the result matrix after convolution calculation

% Memory declarations
imageA_mem      = fi([0.103601 0.003601 0.003662 0.003723 0.003815 0.003845 0.003540 0.003418 0.003479 0.003845 0.004120 0.004242 0.004303 0.004456 0.005096 0.003662 0.002014 0.001404 0.001831 0.002319 0.002106 0.001648 0.001831 0.001770 0.001617 0.001495 0.001404 0.001404 0.001465 0.001495 0.001831 0.001770 0.001740 0.001740 0.001801 0.001831 0.001801 0.001740 0.001556 0.001648 0.001801 0.001923 0.001923 0.001831 0.001678 0.001526 0.001343 0.001251 0.001343 0.001526 0.001526 0.001343 0.001251 0.001343 0.001740 0.001740 0.001740 0.001740 0.001740 0.001740 0.001740 0.001740 0.001465 0.001465 0.001495 0.001556 0.001617 0.001678 0.001740 0.001770 0.001648 0.001648 0.001678 0.001770 0.001801 0.001831 0.001923 0.001923 0.002075 0.002106 0.002167 0.002228 0.002319 0.002380 0.002472 0.002502 0.002747 0.002747 0.003052 0.002228 0.010010 0.009583 0.010010 0.009857 0.002563 0.002655 0.001801 0.002289 0.001923 0.002075 0.001953 0.001953 0.002014 0.002045 0.002106 0.002167 0.002197 0.002197 0.002228 0.002197 0.002167 0.002106 0.002075 0.002045 0.002014 0.001953 0.002106 0.002167 0.002167 0.002167 0.002197 0.002228 0.002228 0.002228 0.002441 0.002441 0.002472 0.002502 0.002563 0.002594 0.002625 0.002655 0.002655 0.002716 0.002747 0.002777 0.002869 0.002899 0.002930 0.002930 0.002869 0.002930 0.003113 0.003265 0.003326 0.003326 0.003296 0.003204 0.003448 0.003479 0.003479 0.003540 0.003571 0.003571 0.003601 0.003601 0.003693 0.003693 0.003693 0.003693 0.003693 0.003693 0.003693 0.003693 0.003845 0.003845 0.003815 0.003815 0.003754 0.003754 0.003723 0.003723 0.003662 0.003662 0.003662 0.003662 0.003662 0.003662 0.003662 0.003662 0.003448 0.003418 0.003387 0.003326 0.003326 0.003387 0.003448 0.003479 0.003448 0.003601 0.003723 0.003815 0.004120 0.004517 0.004639 0.004517 0.003937 0.002441 0.001221 0.001373 0.002045 0.002106 0.001740 0.001373 0.001801 0.001801 0.001770 0.001740 0.001740 0.001740 0.001740 0.001740 0.001404 0.001343 0.001251 0.001282 0.001373 0.001404 0.001343 0.001282 0.001251 0.001099 0.001007 0.001099 0.001343 0.001465 0.001343 0.001221 0.001495 0.001373 0.001373 0.001526 0.001526 0.001373 0.001373 0.001495 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001495 0.001526 0.001556 0.001648 0.001740 0.001770 0.001801 0.001831 0.001801 0.001801 0.001831 0.001892 0.001892 0.001923 0.001923 0.001953 0.002014 0.002045 0.002106 0.002197 0.002319 0.002441 0.002502 0.002563 0.002441 0.002563 0.002777 0.002716 0.009949 0.009918 0.009949 0.009369 0.002716 0.002991 0.001740 0.002716 0.001831 0.002014 0.001923 0.001953 0.002014 0.002045 0.002075 0.002106 0.002167 0.002197 0.002075 0.002075 0.002045 0.002045 0.002014 0.002014 0.001953 0.001953 0.002075 0.002075 0.002075 0.002106 0.002106 0.002167 0.002167 0.002167 0.002228 0.002289 0.002319 0.002350 0.002380 0.002441 0.002472 0.002502 0.002563 0.002594 0.002594 0.002625 0.002655 0.002716 0.002747 0.002747 0.002594 0.002655 0.002838 0.002991 0.003052 0.003021 0.002930 0.002869 0.003296 0.003296 0.003296 0.003296 0.003296 0.003296 0.003326 0.003326 0.003418 0.003418 0.003418 0.003418 0.003418 0.003418 0.003418 0.003418 0.003387 0.003387 0.003326 0.003326 0.003296 0.003296 0.003265 0.003265 0.003540 0.003540 0.003540 0.003540 0.003540 0.003540 0.003540 0.003540 0.003540 0.003479 0.003418 0.003387 0.003387 0.003418 0.003448 0.003448 0.003326 0.003693 0.003723 0.003571 0.003754 0.004272 0.004303 0.003998 0.002075 0.001465 0.001373 0.002014 0.002228 0.001801 0.001801 0.002289 0.001648 0.001678 0.001740 0.001770 0.001801 0.001801 0.001801 0.001770 0.001892 0.001801 0.001770 0.001801 0.001892 0.001892 0.001831 0.001770 0.001923 0.001556 0.001251 0.001282 0.001617 0.001923 0.001953 0.001831 0.001465 0.001343 0.001282 0.001404 0.001404 0.001282 0.001343 0.001465 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001404 0.001465 0.001495 0.001556 0.001648 0.001678 0.001770 0.001770 0.001801 0.001831 0.001831 0.001831 0.001831 0.001831 0.001831 0.001892 0.001801 0.001831 0.001953 0.002106 0.002228 0.002380 0.002502 0.002563 0.002563 0.002655 0.002625 0.003113 0.009583 0.010010 0.009949 0.009857 0.002655 0.002594 0.002289 0.002289 0.002197 0.002167 0.001953 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002045 0.001923 0.001953 0.001953 0.002014 0.002014 0.002045 0.002045 0.002045 0.002045 0.002045 0.002045 0.002075 0.002106 0.002167 0.002167 0.002167 0.002197 0.002197 0.002197 0.002197 0.002228 0.002228 0.002228 0.002228 0.002502 0.002502 0.002502 0.002502 0.002563 0.002563 0.002563 0.002563 0.002625 0.002655 0.002747 0.002838 0.002869 0.002869 0.002869 0.002838 0.002899 0.002930 0.003021 0.003113 0.003143 0.003143 0.003113 0.003052 0.003113 0.003052 0.002991 0.002930 0.002930 0.002991 0.003021 0.003052 0.002991 0.003021 0.003021 0.003021 0.003052 0.003113 0.003113 0.003113 0.003113 0.003143 0.003143 0.003174 0.003204 0.003265 0.003265 0.003296 0.003265 0.003265 0.003265 0.003265 0.003265 0.003265 0.003296 0.003296 0.003571 0.003693 0.003601 0.003540 0.003845 0.004089 0.003540 0.002716 0.001190 0.001373 0.001678 0.002014 0.002167 0.002167 0.002106 0.002045 0.001526 0.001526 0.001831 0.002350 0.002441 0.002075 0.001801 0.001801 0.001953 0.001770 0.001678 0.001770 0.001953 0.002014 0.001770 0.001526 0.001465 0.001740 0.001953 0.001617 0.001099 0.001343 0.001678 0.001556 0.001465 0.001617 0.001465 0.001129 0.001251 0.001648 0.001556 0.001129 0.001343 0.001343 0.001343 0.001343 0.001373 0.001373 0.001373 0.001373 0.001465 0.001465 0.001495 0.001526 0.001617 0.001648 0.001678 0.001678 0.001617 0.001648 0.001678 0.001770 0.001801 0.001892 0.001923 0.001953 0.002045 0.002075 0.002106 0.002167 0.002228 0.002319 0.002350 0.002350 0.002350 0.002441 0.002594 0.002441 0.010010 0.010010 0.009949 0.009857 0.002625 0.002563 0.002197 0.002228 0.002106 0.002075 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.001953 0.001953 0.001953 0.001953 0.001953 0.001953 0.001953 0.001923 0.001953 0.002014 0.002014 0.002045 0.002045 0.002075 0.002075 0.002106 0.002167 0.002167 0.002167 0.002167 0.002197 0.002197 0.002228 0.002228 0.002441 0.002441 0.002472 0.002472 0.002472 0.002502 0.002502 0.002502 0.002563 0.002625 0.002716 0.002777 0.002838 0.002838 0.002777 0.002777 0.002838 0.002869 0.002930 0.003021 0.003052 0.003052 0.003021 0.003021 0.002930 0.002899 0.002869 0.002838 0.002869 0.002899 0.002930 0.002991 0.002930 0.002930 0.002991 0.002991 0.003021 0.003021 0.003052 0.003052 0.002991 0.002991 0.002991 0.002991 0.003021 0.003021 0.003021 0.003021 0.003174 0.003174 0.003174 0.003174 0.003174 0.003174 0.003174 0.003174 0.003143 0.003601 0.003815 0.003723 0.003876 0.003815 0.002625 0.001099 0.001007 0.001251 0.001648 0.001953 0.002167 0.002075 0.001923 0.001801 0.002075 0.002014 0.002106 0.002319 0.002197 0.001831 0.001678 0.001770 0.001556 0.001495 0.001465 0.001648 0.001892 0.001923 0.001740 0.001526 0.001801 0.001678 0.001801 0.001770 0.001556 0.001770 0.001923 0.001648 0.001617 0.001740 0.001526 0.001190 0.001221 0.001556 0.001526 0.001129 0.001343 0.001343 0.001373 0.001373 0.001373 0.001373 0.001373 0.001373 0.001465 0.001465 0.001495 0.001526 0.001556 0.001648 0.001648 0.001678 0.001617 0.001648 0.001678 0.001740 0.001801 0.001892 0.001923 0.001923 0.002014 0.002045 0.002075 0.002106 0.002197 0.002289 0.002319 0.002319 0.002319 0.002441 0.002594 0.002441 0.010010 0.010010 0.010010 0.009857 0.002625 0.002502 0.002106 0.002106 0.001953 0.001923 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.002014 0.001953 0.001923 0.001923 0.001831 0.001831 0.001801 0.001770 0.001892 0.001923 0.001923 0.001923 0.001953 0.001953 0.001953 0.002014 0.002045 0.002075 0.002075 0.002106 0.002106 0.002167 0.002197 0.002197 0.002319 0.002350 0.002350 0.002380 0.002380 0.002441 0.002472 0.002472 0.002472 0.002502 0.002594 0.002655 0.002747 0.002747 0.002716 0.002655 0.002716 0.002747 0.002838 0.002899 0.002930 0.002930 0.002930 0.002930 0.002838 0.002777 0.002747 0.002747 0.002777 0.002838 0.002899 0.002991 0.002899 0.002899 0.002930 0.002930 0.002991 0.002991 0.002991 0.003021 0.003021 0.003021 0.002991 0.002991 0.002991 0.002930 0.002930 0.002930 0.003052 0.003052 0.003052 0.003052 0.003052 0.003052 0.003052 0.003021 0.003174 0.003143 0.003448 0.003937 0.003723 0.002655 0.001373 0.000641 0.001068 0.001343 0.001740 0.002045 0.002197 0.002106 0.001923 0.001770 0.002380 0.002350 0.002350 0.002319 0.002075 0.001801 0.001801 0.002014 0.001923 0.001892 0.001923 0.002075 0.002289 0.002289 0.002075 0.001892 0.002167 0.001617 0.001617 0.001953 0.002075 0.002167 0.002106 0.001801 0.001801 0.001831 0.001617 0.001251 0.001221 0.001495 0.001526 0.001251 0.001373 0.001373 0.001373 0.001373 0.001373 0.001373 0.001373 0.001373 0.001465 0.001465 0.001495 0.001526 0.001556 0.001617 0.001648 0.001648 0.001617 0.001617 0.001678 0.001740 0.001801 0.001831 0.001892 0.001923 0.001923 0.001953 0.002014 0.002075 0.002106 0.002197 0.002228 0.002289 0.002319 0.002380 0.002563 0.002441 0.010010 0.009949 0.010010 0.009888 0.002625 0.002502 0.002075 0.002045 0.001923 0.001831 0.002045 0.002045 0.002045 0.002014 0.002014 0.001953 0.001953 0.001953 0.002014 0.001953 0.001923 0.001831 0.001770 0.001740], 1, 16, 15, 'RoundingMethod', 'Floor'); %! MEM<> [0,0] % actual image
kernel_mem      = fi([0.012024 0.012024 0.012146 0.012421 0.012665 0.012817 0.011780 0.011383 0.011627 0.012817 0.013733 0.014130 0.014374 0.014893 0.016998 0.012146 0.006653 0.004700 0.006134 0.007721 0.007050 0.005493 0.006134 0.005890 0.005371 0.004974 0.004700 0.004700 0.004822 0.004974 0.006134 0.005890 0.005737 0.005737 0.006012 0.006134 0.006012 0.005737 0.005219 0.005493 0.006012 0.006409 0.006409 0.006134 0.005615 0.005096 0.004456 0.004181 0.004456 0.005096 0.005096 0.004456 0.004181 0.004456 0.005737 0.005737 0.005737 0.005737 0.005737 0.005737 0.005737 0.005737 0.004822 0.004822 0.004974 0.005219 0.005371 0.005615 0.005737 0.005890 0.005493 0.005493 0.005615 0.005890 0.006012 0.006134 0.006409 0.006409 0.006927 0.007050 0.007202 0.007446 0.007721 0.007965 0.008240 0.008362 0.009155 0.009155 0.010193 0.007446 0.033325 0.031891 0.033325 0.032806 0.008484 0.008881 0.006012 0.007568 0.006409 0.006927 0.006531 0.006531 0.006653 0.006805 0.007050 0.007202 0.007324 0.007324 0.007446 0.007324 0.007202 0.007050 0.006927 0.006805 0.006653 0.006531 0.007050 0.007202 0.007202 0.007202 0.007324 0.007446 0.007446 0.007446 0.008118 0.008118 0.008240 0.008362 0.008484 0.008636 0.008759 0.008881 0.008881 0.009033 0.009155 0.009277 0.009552 0.009674 0.009796 0.009796 0.009552 0.009796 0.010315 0.010864 0.011108 0.011108 0.010986 0.010712 0.011505 0.011627 0.011627 0.011780 0.011902 0.011902 0.012024 0.012024 0.012299 0.012299 0.012299 0.012299], 1, 16, 15, 'RoundingMethod', 'Floor'); %! MEM<> [0,1] % image transpose
convolution_mem = fi(zeros(1,OUTPUT_SIZE), 1, 16, 15, 'RoundingMethod', 'Floor'); %! MEM<> [0,2] % covariance result

% RegFile declarations
imageA      = fi(zeros(1,MEM_BLOCK_SIZE), 1, 16, 15, 'RoundingMethod', 'Floor'); %! RFILE<input> [0,0]
kernel      = fi(zeros(1,MEM_BLOCK_SIZE), 1, 16, 15, 'RoundingMethod', 'Floor'); %! RFILE<input> [0,1]
convolution = fi(zeros(1,MEM_BLOCK_SIZE), 1, 16, 15, 'RoundingMethod', 'Floor'); %! RFILE<output> [0,2]

for i = 1 : KERNEL_NO
	kernel = kernel_mem((i-1)*MEM_BLOCK_SIZE+1 : i*MEM_BLOCK_SIZE);

	for j = 1 : IMAGE_SIZE / SQ_MEM_BLOCK_SIZE

		for k = 1 : MEM_BLOCK_SIZE
			imageA  = imageA_mem ((j-1)*SQ_MEM_BLOCK_SIZE+(k-1)*MEM_BLOCK_SIZE+1 : (j-1)*SQ_MEM_BLOCK_SIZE+k*MEM_BLOCK_SIZE);
			convolution(k) = sum(fi(imageA .* kernel, 1, 16, 15, 'RoundingMethod', 'Floor')); %! DPU<sat> [0,0]
		end

		convolution_mem((j-1)*MEM_BLOCK_SIZE+1 : j*MEM_BLOCK_SIZE) = convolution;
	end
end
